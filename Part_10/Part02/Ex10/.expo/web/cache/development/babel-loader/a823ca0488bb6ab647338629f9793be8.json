{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/johnlee/Documents/Projects/Fullstack-2020/Part_10/Ex10/src/components/FormikTextInput.jsx\";\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useField } from 'formik';\nimport TextInput from \"./TextInput\";\nimport Text from \"./Text\";\nvar styles = StyleSheet.create({\n  errorText: {\n    marginTop: 5,\n    color: '#d73a4a'\n  }\n});\n\nvar FormikTextInput = function FormikTextInput(_ref) {\n  var name = _ref.name,\n      props = _objectWithoutProperties(_ref, [\"name\"]);\n\n  var _useField = useField(name),\n      _useField2 = _slicedToArray(_useField, 3),\n      field = _useField2[0],\n      meta = _useField2[1],\n      helpers = _useField2[2];\n\n  var showError = meta.touched && meta.error;\n  return React.createElement(React.Fragment, null, React.createElement(TextInput, _extends({\n    onChangeText: function onChangeText(value) {\n      return helpers.setValue(value);\n    },\n    onBlur: function onBlur() {\n      return helpers.setTouched(true);\n    },\n    value: field.value,\n    error: showError\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  })), showError && React.createElement(Text, {\n    style: styles.errorText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, meta.error));\n};\n\nexport default FormikTextInput;","map":{"version":3,"sources":["/Users/johnlee/Documents/Projects/Fullstack-2020/Part_10/Ex10/src/components/FormikTextInput.jsx"],"names":["React","useField","TextInput","Text","styles","StyleSheet","create","errorText","marginTop","color","FormikTextInput","name","props","field","meta","helpers","showError","touched","error","value","setValue","setTouched"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,QAAyB,QAAzB;AAEA,OAAOC,SAAP;AACA,OAAOC,IAAP;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,SAAS,EAAE,CADF;AAETC,IAAAA,KAAK,EAAC;AAFG;AADoB,CAAlB,CAAf;;AAOA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAAwB;AAAA,MAArBC,IAAqB,QAArBA,IAAqB;AAAA,MAAZC,KAAY;;AAAA,kBACfX,QAAQ,CAACU,IAAD,CADO;AAAA;AAAA,MACvCE,KADuC;AAAA,MAChCC,IADgC;AAAA,MAC1BC,OAD0B;;AAE9C,MAAMC,SAAS,GAAGF,IAAI,CAACG,OAAL,IAAgBH,IAAI,CAACI,KAAvC;AAEA,SACE,0CACE,oBAAC,SAAD;AACE,IAAA,YAAY,EAAE,sBAAAC,KAAK;AAAA,aAAIJ,OAAO,CAACK,QAAR,CAAiBD,KAAjB,CAAJ;AAAA,KADrB;AAEE,IAAA,MAAM,EAAE;AAAA,aAAMJ,OAAO,CAACM,UAAR,CAAmB,IAAnB,CAAN;AAAA,KAFV;AAGE,IAAA,KAAK,EAAER,KAAK,CAACM,KAHf;AAIE,IAAA,KAAK,EAAEH;AAJT,KAKMJ,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAQGI,SAAS,IAAI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEZ,MAAM,CAACG,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCO,IAAI,CAACI,KAArC,CARhB,CADF;AAYD,CAhBD;;AAkBA,eAAeR,eAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { useField } from 'formik';\n\nimport TextInput from './TextInput';\nimport Text from './Text';\n\nconst styles = StyleSheet.create({\n  errorText: {\n    marginTop: 5,\n    color:'#d73a4a',\n  }\n});\n\nconst FormikTextInput = ({ name, ...props }) => {\n  const [field, meta, helpers] = useField(name);\n  const showError = meta.touched && meta.error;\n\n  return (\n    <>\n      <TextInput\n        onChangeText={value => helpers.setValue(value)}\n        onBlur={() => helpers.setTouched(true)}\n        value={field.value}\n        error={showError}\n        {...props}\n      />\n      {showError && <Text style={styles.errorText}>{meta.error}</Text>}\n    </>\n  );\n};\n\nexport default FormikTextInput;"]},"metadata":{},"sourceType":"module"}