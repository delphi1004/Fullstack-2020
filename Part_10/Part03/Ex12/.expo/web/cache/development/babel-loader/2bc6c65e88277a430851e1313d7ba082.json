{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/johnlee/Documents/Projects/Fullstack-2020/Part_10/Part03/10.11/src/components/RepositoryList.jsx\";\n\nimport React, { useEffect, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport RepositoryItem from \"./RepositoryItem\";\nimport { GET_REPOSITORIES } from \"../graphql/queries\";\nimport { useQuery } from '@apollo/client';\nvar styles = StyleSheet.create({\n  separator: {\n    height: 10\n  }\n});\n\nvar convertToRespositories = function convertToRespositories(node) {\n  return {\n    id: node.id,\n    ownerAvatarUrl: node.ownerAvatarUrl,\n    fullName: node.fullName,\n    description: node.description,\n    languageButton: node.languageButton,\n    language: node.language,\n    stargazersCount: node.stargazersCount,\n    forksCount: node.forksCount,\n    reviewCount: node.reviewCount,\n    ratingAverage: node.ratingAverage\n  };\n};\n\nvar ItemSeparator = function ItemSeparator() {\n  return React.createElement(View, {\n    style: styles.separator,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 29\n    }\n  });\n};\n\nvar RepositoryList = function RepositoryList() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      repositories = _useState2[0],\n      setRepositories = _useState2[1];\n\n  var result = useQuery(GET_REPOSITORIES, {\n    fetchPolicy: \"cache-and-network\",\n    variables: {\n      orderDirection: 'DSC',\n      first: 10\n    }\n  });\n  useEffect(function () {\n    if (result.data !== undefined) {\n      setRepositories(result.data.repositories.edges.map(function (node) {\n        return convertToRespositories(node.node);\n      }));\n    }\n  }, [result.data]);\n  return React.createElement(FlatList, {\n    data: repositories,\n    ItemSeparatorComponent: ItemSeparator,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    renderItem: RepositoryItem,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default RepositoryList;","map":{"version":3,"sources":["/Users/johnlee/Documents/Projects/Fullstack-2020/Part_10/Part03/10.11/src/components/RepositoryList.jsx"],"names":["React","useEffect","useState","RepositoryItem","GET_REPOSITORIES","useQuery","styles","StyleSheet","create","separator","height","convertToRespositories","node","id","ownerAvatarUrl","fullName","description","languageButton","language","stargazersCount","forksCount","reviewCount","ratingAverage","ItemSeparator","RepositoryList","repositories","setRepositories","result","fetchPolicy","variables","orderDirection","first","data","undefined","edges","map","item"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;AAEA,OAAOC,cAAP;AACA,SAASC,gBAAT;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAE;AADC;AADoB,CAAlB,CAAf;;AAMA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,IAAD,EAAU;AACvC,SAAO;AACLC,IAAAA,EAAE,EAAED,IAAI,CAACC,EADJ;AAELC,IAAAA,cAAc,EAAEF,IAAI,CAACE,cAFhB;AAGLC,IAAAA,QAAQ,EAAEH,IAAI,CAACG,QAHV;AAILC,IAAAA,WAAW,EAAEJ,IAAI,CAACI,WAJb;AAKLC,IAAAA,cAAc,EAAEL,IAAI,CAACK,cALhB;AAMLC,IAAAA,QAAQ,EAAEN,IAAI,CAACM,QANV;AAOLC,IAAAA,eAAe,EAAEP,IAAI,CAACO,eAPjB;AAQLC,IAAAA,UAAU,EAAER,IAAI,CAACQ,UARZ;AASLC,IAAAA,WAAW,EAAET,IAAI,CAACS,WATb;AAULC,IAAAA,aAAa,EAAEV,IAAI,CAACU;AAVf,GAAP;AAYD,CAbD;;AAeA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA,SAAM,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEjB,MAAM,CAACG,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAN;AAAA,CAAtB;;AAEA,IAAMe,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAAA,kBACatB,QAAQ,EADrB;AAAA;AAAA,MACpBuB,YADoB;AAAA,MACNC,eADM;;AAE3B,MAAMC,MAAM,GAAGtB,QAAQ,CAACD,gBAAD,EAAmB;AACxCwB,IAAAA,WAAW,EAAE,mBAD2B;AAExCC,IAAAA,SAAS,EAAE;AAAEC,MAAAA,cAAc,EAAE,KAAlB;AAAyBC,MAAAA,KAAK,EAAE;AAAhC;AAF6B,GAAnB,CAAvB;AAKA9B,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI0B,MAAM,CAACK,IAAP,KAAgBC,SAApB,EAA+B;AAC7BP,MAAAA,eAAe,CAACC,MAAM,CAACK,IAAP,CAAYP,YAAZ,CAAyBS,KAAzB,CAA+BC,GAA/B,CAAmC,UAAAvB,IAAI;AAAA,eAAID,sBAAsB,CAACC,IAAI,CAACA,IAAN,CAA1B;AAAA,OAAvC,CAAD,CAAf;AACD;AACF,GAJQ,EAIN,CAACe,MAAM,CAACK,IAAR,CAJM,CAAT;AAMA,SACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEP,YADR;AAEE,IAAA,sBAAsB,EAAEF,aAF1B;AAGE,IAAA,YAAY,EAAE,sBAACa,IAAD;AAAA,aAAUA,IAAI,CAACvB,EAAf;AAAA,KAHhB;AAIE,IAAA,UAAU,EAAEV,cAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD,CArBD;;AAuBA,eAAeqB,cAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { FlatList, View, StyleSheet } from 'react-native';\nimport RepositoryItem from './RepositoryItem';\nimport { GET_REPOSITORIES } from '../graphql/queries';\nimport { useQuery } from '@apollo/client';\n\nconst styles = StyleSheet.create({\n  separator: {\n    height: 10,\n  },\n});\n\nconst convertToRespositories = (node) => {\n  return {\n    id: node.id,\n    ownerAvatarUrl: node.ownerAvatarUrl,\n    fullName: node.fullName,\n    description: node.description,\n    languageButton: node.languageButton,\n    language: node.language,\n    stargazersCount: node.stargazersCount,\n    forksCount: node.forksCount,\n    reviewCount: node.reviewCount,\n    ratingAverage: node.ratingAverage\n  };\n};\n\nconst ItemSeparator = () => <View style={styles.separator} />;\n\nconst RepositoryList = () => {\n  const [repositories, setRepositories] = useState();\n  const result = useQuery(GET_REPOSITORIES, {\n    fetchPolicy: \"cache-and-network\",\n    variables: { orderDirection: 'DSC', first: 10 },\n  });\n\n  useEffect(() => {\n    if (result.data !== undefined) {\n      setRepositories(result.data.repositories.edges.map(node => convertToRespositories(node.node)));\n    }\n  }, [result.data]);\n\n  return (\n    <FlatList\n      data={repositories}\n      ItemSeparatorComponent={ItemSeparator}\n      keyExtractor={(item) => item.id}\n      renderItem={RepositoryItem}\n    />\n  );\n};\n\nexport default RepositoryList;"]},"metadata":{},"sourceType":"module"}