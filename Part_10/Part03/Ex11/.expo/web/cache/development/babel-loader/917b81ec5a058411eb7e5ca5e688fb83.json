{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/johnlee/Documents/Projects/Fullstack-2020/Part_10/Ex10/src/components/SignIn.jsx\";\n\nimport React from 'react';\nimport Text from \"./Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Formik, useField } from 'formik';\nimport * as yup from 'yup';\nimport FormikTextInput from \"./FormikTextInput\";\nimport theme from \"./theme\";\nvar initialValues = {\n  userid: '',\n  password: ''\n};\nvar styles = StyleSheet.create({\n  container: {\n    height: 240,\n    alignItems: 'center',\n    backgroundColor: 'white'\n  },\n  inputForm: {\n    marginTop: 20\n  },\n  signInButton: {\n    marginTop: 15,\n    alignItems: 'center'\n  },\n  signInButtonText: {\n    fontSize: 16,\n    fontWeight: '500',\n    fontFamily: theme.fonts.main\n  }\n});\n\nvar SignInForm = function SignInForm(_ref) {\n  var onSubmit = _ref.onSubmit;\n\n  var _useField = useField('userid'),\n      _useField2 = _slicedToArray(_useField, 3),\n      useridField = _useField2[0],\n      useridMeta = _useField2[1],\n      useridHelpers = _useField2[2];\n\n  var _useField3 = useField('password'),\n      _useField4 = _slicedToArray(_useField3, 3),\n      passwordField = _useField4[0],\n      passwordMeta = _useField4[1],\n      passwordHelpers = _useField4[2];\n\n  return React.createElement(View, {\n    style: styles.inputForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, React.createElement(FormikTextInput, {\n    name: \"userid\",\n    placeholder: \"user id\",\n    style: \"default\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), React.createElement(FormikTextInput, {\n    name: \"password\",\n    placeholder: \"password\",\n    style: \"default\",\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.signInButton,\n    onPress: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.signInButtonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Sign in\")));\n};\n\nvar onSubmit = function onSubmit(values) {\n  console.log('onSubmit ', values);\n};\n\nvar SignIn = function SignIn() {\n  var validationSchema = yup.object().shape({\n    userid: yup.string().min(3, 'the minimum user id is 3 letters').required('user id is required'),\n    password: yup.string().min(4, 'the minimum password is 4 letters').required('password is required')\n  });\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, React.createElement(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, function (_ref2) {\n    var handleSubmit = _ref2.handleSubmit;\n    return React.createElement(SignInForm, {\n      onSubmit: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 32\n      }\n    });\n  }));\n};\n\nexport default SignIn;","map":{"version":3,"sources":["/Users/johnlee/Documents/Projects/Fullstack-2020/Part_10/Ex10/src/components/SignIn.jsx"],"names":["React","Text","Formik","useField","yup","FormikTextInput","theme","initialValues","userid","password","styles","StyleSheet","create","container","height","alignItems","backgroundColor","inputForm","marginTop","signInButton","signInButtonText","fontSize","fontWeight","fontFamily","fonts","main","SignInForm","onSubmit","useridField","useridMeta","useridHelpers","passwordField","passwordMeta","passwordHelpers","values","console","log","SignIn","validationSchema","object","shape","string","min","required","handleSubmit"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport Text from './Text';\nimport { TextInput, TouchableWithoutFeedback, TouchableOpacity, View, StyleSheet } from 'react-native';\nimport { Formik, useField } from 'formik';\nimport * as yup from 'yup';\nimport FormikTextInput from './FormikTextInput';\nimport theme from './theme';\n\nconst initialValues = {\n  userid: '',\n  password: '',\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 240,\n    alignItems: 'center',\n    backgroundColor: 'white',\n  },\n  inputForm: {\n    marginTop: 20,\n  },\n  signInButton: { \n    marginTop: 15 ,\n    alignItems: 'center' \n  },\n  signInButtonText: {\n    fontSize: 16,\n    fontWeight: '500',\n    fontFamily:theme.fonts.main,\n  }\n});\n\nconst SignInForm = ({ onSubmit }) => {\n  const [useridField, useridMeta, useridHelpers] = useField('userid');\n  const [passwordField, passwordMeta, passwordHelpers] = useField('password');\n\n  return (\n    <View style={styles.inputForm}>\n      <FormikTextInput name=\"userid\" placeholder=\"user id\" style='default' />\n      <FormikTextInput name=\"password\" placeholder=\"password\" style='default' secureTextEntry={true} />\n      <TouchableOpacity style={styles.signInButton} onPress={onSubmit}>\n        <Text style={styles.signInButtonText}>Sign in</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst onSubmit = (values) => {\n  console.log('onSubmit ', values);\n};\n\nconst SignIn = () => {\n\n  const validationSchema = yup.object().shape({\n    userid: yup\n      .string()\n      .min(3, 'the minimum user id is 3 letters')\n      .required('user id is required'),\n    password: yup\n      .string()\n      .min(4, 'the minimum password is 4 letters')\n      .required('password is required'),\n  });\n\n  return (\n    <View style={styles.container}>\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\n        {({ handleSubmit }) => <SignInForm onSubmit={handleSubmit} />}\n      </Formik>\n    </View>\n  );\n};\n\nexport default SignIn;"]},"metadata":{},"sourceType":"module"}