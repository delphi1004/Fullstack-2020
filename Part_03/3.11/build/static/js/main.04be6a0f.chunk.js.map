{"version":3,"sources":["components/filter.js","components/personform.js","components/persons.js","services/person.js","App.js","index.js"],"names":["Filter","nameFilter","handleNameFilterChange","value","onChange","PersonForm","addPerson","newName","newNumber","handlePersonChange","handleNumberChange","inputNameRef","onSubmit","ref","type","Persons","personToShow","deletePersonHandler","map","person","index","key","name","number","onClick","id","baseUrl","getAll","a","request","axios","get","data","Error","addNewData","newData","post","updateData","updatedData","url","put","deletePerson","delete","App","useRef","useState","persons","setPersons","setNewName","setNewNumber","setNameFilter","useEffect","console","log","service","then","catch","error","filter","toUpperCase","includes","event","target","preventDefault","existed","findIndex","numberExsited","newPerson","concat","window","confirm","changedPerson","alert","current","focus","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04be6a0f.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({nameFilter,handleNameFilterChange}) =>{\n    return(\n      <form>\n        filter shown with: <input value = {nameFilter} onChange = {handleNameFilterChange}/>\n      </form>\n    )\n}\n\nexport default Filter\n","import React from 'react'\n\nconst PersonForm = ({addPerson,newName,newNumber,handlePersonChange,handleNumberChange,inputNameRef}) =>{\n    return(\n        <form onSubmit = {addPerson}>\n        <div>name: <input value = {newName} onChange = {handlePersonChange} ref = {inputNameRef}/></div>\n        <div>number: <input value = {newNumber} onChange = {handleNumberChange}/></div>\n        <div><button type = \"submit\">add</button></div>\n      </form>\n    )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Persons = ({personToShow , deletePersonHandler}) =>{\n    return(\n        <ul>\n         {personToShow.map((person,index) => \n           <li key = {index}>{person.name} {person.number} <button onClick = {() => deletePersonHandler(person.id)}>delete</button></li>\n         )}\n      </ul>\n    )\n}\n\nexport default Persons","import axios from 'axios'\nconst baseUrl = 'api/persons'\n\nconst getAll = async () =>{\n    const request = axios.get(baseUrl)\n    try{\n        return (await request).data\n    }catch (error) {\n        throw new Error(error);\n    }\n}\n\nconst addNewData = async (newData) =>{\n    const request = axios.post(baseUrl, newData)\n    try{\n        return (await request).data\n    }catch (error) {\n        throw new Error(error);\n    }\n}\n\nconst updateData = async (updatedData) =>{\n\n    const url = `${baseUrl}/${updatedData.id}`\n    const request = axios.put(url, updatedData)\n    try{\n        return (await request).data\n    }catch (error) {\n        throw new Error(error);\n    }\n}\n\nconst deletePerson = async (id) =>{\n    const url = `${baseUrl}/${id}`\n    const request = axios.delete(url)\n    try{\n        return (await request).data\n    }catch (error) {\n        throw new Error(error);\n    }\n}\n\nexport default {getAll , addNewData , deletePerson , updateData}","import './App.css';\nimport React, { useState, useRef, useEffect } from 'react'\nimport Filter from './components/filter'\nimport PersonForm from './components/personform'\nimport Persons from './components/persons'\nimport service from './services/person'\n\nconst App = () => {\n\n  let personToShow = null\n  const inputNameRef = useRef()\n  const [persons, setPersons] = useState(null)\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [nameFilter, setNameFilter] = useState('')\n\n  useEffect(() => {\n    console.log('effect')\n      service.getAll()\n        .then(data => { setPersons(data) })\n        .catch(error => { console.log(error) })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const existed = persons.findIndex(person => person.name === newName)\n    const numberExsited = persons.findIndex(person => person.number === newNumber && person.name === newName)\n\n    if (existed < 0) {\n      let newPerson = { name: newName, number: newNumber }\n        service.addNewData(newPerson)\n        .then(data => { setPersons(persons.concat(data)) })\n        .catch(error => { console.log(error) })\n    }else if (numberExsited < 0){\n      if (window.confirm(newName+\"is already added to phonebook,replace old number with a new one?\")) {\n        const changedPerson = {...persons[existed] , number: newNumber}\n        service.updateData(changedPerson)\n        .then(data => setPersons(persons.map(person => person.id !== changedPerson.id ? person : changedPerson)))\n        .catch(error => { console.log(error) })\n      } \n    }else{\n      alert(`${newName} is already added to phonebook`)\n    }\n\n    setNewName('')\n    setNewNumber('')\n\n    inputNameRef.current.focus();\n  }\n\n  const deletePerson = (id) => {\n    service.deletePerson(id)\n      .then(() => { setPersons(persons.filter(person => person.id !== id)) })\n      .catch(error => { console.log(error) })\n  }\n\n  const handlePersonChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleNameFilterChange = (event) => {\n    setNameFilter(event.target.value)\n  }\n\n  if (persons !== null) {\n    personToShow = persons.filter(person => person.name.toUpperCase().includes(nameFilter.toUpperCase()))\n\n    return (\n      <div>\n        <h2>Phonebook</h2>\n        <Filter nameFilter={nameFilter} handleNameFilterChange={handleNameFilterChange} />\n\n        <h2>add a new</h2>\n        <PersonForm addPerson={addPerson} newName={newName} newNumber={newNumber} handlePersonChange={handlePersonChange} handleNumberChange={handleNumberChange} inputNameRef={inputNameRef} />\n\n        <h2>Numbers</h2>\n        <Persons personToShow={personToShow} deletePersonHandler={deletePerson} />\n      </div>\n    )\n  } else {\n    return (\n      <div>\n        <h1>Loading phonebook data...</h1>\n      </div>\n    )\n  }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}